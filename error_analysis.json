[
  {
    "question": "What was the average monthly consumption of customers in SME for the year 2013?",
    "gold_query": "SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'",
    "generated_query": "SELECT AVG(Consumption) AS AverageMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND ym.Date LIKE '2013%' GROUP BY ym.Date ",
    "result": "wrong answer",
    "reason": "ambiguity",
    "f_SQL": "SELECT AVG(monthly_consumption) WHERE customers are in SME AND year = 2013",
    "new_generated_query": "SELECT AVG(Consumption) AS average_monthly_consumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date LIKE '2013%';",
    "new_result": "correct"
  },
  {
    "question": "What is the highest monthly consumption in the year 2012?",
    "gold_query": "SELECT SUM(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' GROUP BY SUBSTR(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1",
    "generated_query": "SELECT MAX(Consumption) AS HighestMonthlyConsumption FROM yearmonth WHERE Date LIKE '2012-%'; ",
    "result": "wrong answer",
    "reason": "ambiguity",
    "f_SQL1": "SELECT highest SUM(monthly_consumption) WHERE year = 2012",
    "new_generated_query1": "SELECT CustomerID, SUM(Consumption) AS monthly_consumption FROM yearmonth WHERE Date LIKE '2012%' GROUP BY CustomerID ORDER BY monthly_consumption DESC LIMIT 1;",
    "new_result1": "ambiguity",
    "f_SQL2": "SELECT highest SUM(consumption) WHERE year = 2012 GROUP BY month",
    "new_generated_query2": "SELECT MONTH(Date) AS month, SUM(Consumption) AS total_consumption FROM yearmonth WHERE YEAR(Date) = 2012 GROUP BY MONTH(Date) ORDER BY total_consumption DESC LIMIT 1;",
    "new_result2": "correct"
  },
  {
    "question": "How much did customer 6 consume in total between August and November 2013?",
    "gold_query": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'",
    "generated_query": "SELECT SUM(t.Amount) AS TotalConsumption FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE t.CustomerID = 6 AND ym.Date >= '2013-08-01' AND ym.Date <= '2013-11-30'; ",
    "result": "wrong answer",
    "reason": "wrong schema",
    "f_SQL": "SELECT SUM(consumption) WHERE customer = 6 AND time between August and November 2013",
    "new_generated_query": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30';",
    "new_result": "wrong value"
  },
  {
    "question": "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "gold_query": "SELECT SUM(Currency = 'CZK') - SUM(Currency = 'EUR') FROM customers WHERE Segment = 'SME'",
    "generated_query": "SELECT (SELECT COUNT(DISTINCT t.CustomerID) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'CZK') AS SMEs_CZK, (SELECT COUNT(DISTINCT t.CustomerID) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'EUR') AS SMEs_EUR, (SELECT COUNT(DISTINCT t.CustomerID) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'CZK') - (SELECT COUNT(DISTINCT t.CustomerID) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'EUR') AS Difference ",
    "result": "wrong answer",
    "reason": "wrong schema",
    "f_SQL": "SELECT COUNT(customers pay in Czech koruna) - COUNT(customers pay in euros) WHERE customers in SME",
    "new_generated_query": "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'Czech koruna' AND Segment = 'SME') - (SELECT COUNT(*) FROM customers WHERE Currency = 'euros' AND Segment = 'SME') AS CurrencyDifference;",
    "new_result": "wrong value"
  },
  {
    "question": "What is the percentage of \"premium\" against the overall segment in Country = \"SVK\"?",
    "gold_query": "SELECT CAST(SUM(IIF(Country = 'SVK' AND Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations",
    "generated_query": "SELECT (COUNT(CASE WHEN c.Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS premium_percentage FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'SVK'; ",
    "result": "wrong answer",
    "reason": "wrong schema",
    "f_SQL": "SELECT COUNT(segment = premium) / COUNT(*) WHERE country = SVK",
    "new_generated_query": "SELECT COUNT(CASE WHEN Segment = 'premium' THEN 1 END) * 1.0 / COUNT(*) FROM gasstations WHERE Country = 'SVK';",
    "new_result": "correct"
  },
  {
    "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "gold_query": "SELECT SUM(T1.Price ) , SUM(IIF(T3.Date = '201201', T1.Price, 0)) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.CustomerID = '38508'",
    "generated_query": "SELECT SUM(t.Amount) AS TotalSpent, SUM(CASE WHEN ym.Date LIKE '2012-01%' THEN ym.Consumption ELSE 0 END) AS January2012Spent FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE t.CustomerID = 38508; ",
    "result": "wrong answer",
    "reason": "wrong logic wrong gold",
    "f_SQL": "SELECT amount spent at gas stations, amount spent in January 2012 WHERE customer = 38508",
    "new_generated_query": "SELECT SUM(t.Amount) AS TotalSpentAtGasStations, (SELECT SUM(y.Consumption) FROM yearmonth y WHERE y.CustomerID = 38508 AND y.Date LIKE '2012-01%') AS TotalSpentInJanuary2012 FROM transactions_1k t WHERE t.CustomerID = 38508;",
    "new_result": "wrong value"
  },
  {
    "question": "What was the gas consumption peak month for SME customers in 2013?",
    "gold_query": "SELECT SUBSTR(T2.Date, 5, 2) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTR(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_query": "SELECT Date, MAX(Consumption) AS PeakConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')   AND Date LIKE '2013%' GROUP BY Date ORDER BY PeakConsumption DESC LIMIT 1; ",
    "result": "wrong answer",
    "reason": "wrong logic",
    "f_SQL1": "SELECT gas consumption peak month WHERE customers in SME AND year = 2013",
    "new_generated_query1": "SELECT MAX(Consumption) AS PeakConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date LIKE '2013%';",
    "new_result1": "wrong logic",
    "f_SQL2": "SELECT month with highest gas consumption WHERE customers in SME AND year = 2013",
    "new_generated_query2": "SELECT Date, SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND YEAR(Date) = 2013 GROUP BY Date ORDER BY TotalConsumption DESC LIMIT 1;",
    "new_result2": "correct"
  },
  {
    "question": "Which of the three segments\u2014SME, LAM and KAM\u2014has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "gold_query": "SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",
    "generated_query": "WITH ConsumptionBySegment AS (SELECT c.Segment, EXTRACT(YEAR FROM y.Date) AS Year, SUM(y.Consumption) AS TotalConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN '2012-01-01' AND '2013-12-31' AND c.Currency = 'EUR' GROUP BY c.Segment, EXTRACT(YEAR FROM y.Date) ), ConsumptionChange AS (SELECT Segment, MAX(CASE WHEN Year = 2012 THEN TotalConsumption END) AS Consumption2012, MAX(CASE WHEN Year = 2013 THEN TotalConsumption END) AS Consumption2013 FROM ConsumptionBySegment GROUP BY Segment ), PercentageChange AS (SELECT Segment, ((Consumption2013 - Consumption2012) / NULLIF(Consumption2012, 0)) * 100 AS PercentageIncrease FROM ConsumptionChange )  SELECT Segment, PercentageIncrease FROM PercentageChange ORDER BY PercentageIncrease DESC LIMIT 1  UNION ALL  SELECT Segment, PercentageIncrease FROM PercentageChange ORDER BY PercentageIncrease ASC LIMIT 1; ",
    "result": "not executable",
    "reason": "wrong logic",
    "f_SQL1": "SELECT consumption increase percentage between 2012 and 2013 for SME, LAM and KAM WHERE currency = EUR",
    "new_generated_query1": "SELECT (SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END) * 100 AS ConsumptionIncreasePercentage FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND c.Segment IN ('SME', 'LAM', 'KAM');",
    "new_result1": "wrong logic",
    "f_SQL2": "SELECT consumption increase percentage between 2012 and 2013 for SME, ... for LAM and ... for KAM WHERE currency = EUR",
    "new_generated_query2": "SELECT Segment, ((SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END)) / NULLIF(SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END), 0)) * 100 AS ConsumptionIncreasePercentage FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Currency = 'EUR' AND Segment IN ('SME', 'LAM', 'KAM') GROUP BY Segment;",
    "new_result2": "correct"
  },
  {
    "question": "How many percent of LAM customer consumed more than 46.73?",
    "gold_query": "SELECT CAST(SUM(IIF(T2.Consumption > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'",
    "generated_query": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS Percentage FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM') AND Consumption > 46.73; ",
    "result": "wrong answer",
    "reason": "wrong logic",
    "f_SQL1": "SELECT percent of LAM customers WHERE consumption > 46.73",
    "new_generated_query1": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS percent FROM yearmonth WHERE Consumption > 46.73 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM');",
    "new_result1": "wrong logic",
    "f_SQL2": "SELECT # of LAM customers consumed > 46.73 / # of LAM customers",
    "new_generated_query2": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM' AND CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Consumption > 46.73)) * 1.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS Ratio",
    "new_result2": "correct"
  },
  {
    "question": "Which year recorded the most consumption of gas paid in CZK?",
    "gold_query": "SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_query": "SELECT YEAR(Date) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY YEAR(Date) ORDER BY TotalConsumption DESC LIMIT 1; ",
    "result": "not executable",
    "reason": "wrong sql function"
  },
  {
    "question": "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "gold_query": "SELECT SUM(IIF(Country = 'CZE', 1, 0)) - SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations WHERE Segment = 'Discount'",
    "generated_query": "SELECT      (SELECT COUNT(*) FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') -     (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount') AS DiscountGasStationsDifference; ",
    "result": "wrong answer",
    "reason": "wrong value"
  },
  {
    "question": "In February 2012, what percentage of customers consumed more than 528.3?",
    "gold_query": "SELECT CAST(SUM(IIF(Consumption > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'",
    "generated_query": "SELECT      (COUNT(DISTINCT y.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '2012-02%')) AS Percentage FROM      yearmonth y WHERE      y.Consumption > 528.3 AND y.Date LIKE '2012-02%'; ",
    "result": "wrong answer",
    "reason": "wrong value"
  },
  {
    "question": "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "gold_query": "SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000.00",
    "generated_query": "SELECT COUNT(DISTINCT c.CustomerID) AS CustomerCount FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'euro' AND ym.Consumption > 1000; ",
    "result": "wrong answer",
    "reason": "wrong value"
  },
  {
    "question": "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "gold_query": "SELECT DISTINCT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'",
    "generated_query": "SELECT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE g.Country = 'Czech Republic'; ",
    "result": "not executable",
    "reason": "wrong value"
  },
  {
    "question": "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "gold_query": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND STRFTIME('%Y', T1.Date) >= '2012'",
    "generated_query": "SELECT COUNT(*) AS TransactionCount FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'Czech Republic' AND t.Date > '2012-01-01'; ",
    "result": "wrong answer",
    "reason": "wrong value"
  },
  {
    "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "gold_query": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'",
    "generated_query": "SELECT c.CustomerID, y.Consumption FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE t.ProductID = 5 AND t.Price > 29.00 AND y.Date = '2012-08' ",
    "result": "not executable",
    "reason": "wrong value"
  },
  {
    "question": "Please list the product description of the products consumed in September, 2013.",
    "gold_query": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309'",
    "generated_query": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID WHERE t.Date >= '2013-09-01' AND t.Date < '2013-10-01'; ",
    "result": "not executable",
    "reason": "wrong gold"
  },
  {
    "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "gold_query": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date = '201306'",
    "generated_query": "SELECT DISTINCT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Date >= '2013-06-01' AND t.Date < '2013-07-01'; ",
    "result": "not executable",
    "reason": "wrong gold"
  },
  {
    "question": "What is the percentage of the customers who used EUR in 2012/8/25?",
    "gold_query": "SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'",
    "generated_query": "SELECT (COUNT(DISTINCT c.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM customers)) AS Percentage FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND t.Date = '2012-08-25'; ",
    "result": "wrong answer",
    "reason": "wrong gold"
  },
  {
    "question": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "gold_query": "SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",
    "generated_query": "SELECT c.CustomerID, SUM(t.Amount * t.Price) AS TotalSpent, AVG(t.Price) AS AveragePricePerItem, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID, c.Currency ORDER BY TotalSpent DESC LIMIT 1; ",
    "result": "wrong answer",
    "reason": "wrong gold"
  },
  {
    "f_SQL": "",
    "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "gold_query": "SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",
    "generated_query": "WITH AnnualConsumption AS (SELECT c.Segment, SUM(ym.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date LIKE '2013%' AND c.Currency = 'CZK' GROUP BY c.Segment), AverageConsumption AS (SELECT Segment, AVG(TotalConsumption) AS AvgConsumption FROM AnnualConsumption GROUP BY Segment), ConsumptionDifference AS (SELECT 'SME vs LAM' AS Comparison, (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'SME') - (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'LAM') AS Difference UNION ALL SELECT 'LAM vs KAM', (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'LAM') - (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'KAM') AS Difference UNION ALL SELECT 'KAM vs SME', (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'KAM') - (SELECT AvgConsumption FROM AverageConsumption WHERE Segment = 'SME') AS Difference ) SELECT * FROM ConsumptionDifference; ",
    "result": "wrong answer",
    "reason": "wrong logic wrong gold"
  }
]